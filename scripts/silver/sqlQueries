-- fix crm.cust_info

INSERT INTO silver.crm_cust_info(
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_marital_status,
            cst_gndr,
            cst_create_date
            )
select
cst_id,
cst_key,
TRIM(cst_firstname) as cst_fristname,
TRIM(cst_lastname) as cst_lastname,
CASE
  WHEN Upper(TRIM(cst_marital_status))='S' then 'Single'
  WHEN Upper(TRIM(cst_marital_status))='M' then 'Married'
  else 'n/a'
  end as cst_marital_status,
CASE
  WHEN Upper(TRIM(cst_gndr))='M' then 'Male'
  WHEN Upper(TRIM(cst_gndr))='F' then 'Female'
  else 'n/a'
  end as cst_gndr,
  cst_create_date
from
(
SELECT*,
ROW_NUMBER()OVER(PARTiTION by cst_id ORDER BY cst_create_date DESC) as rank_by_create_date
from bronze.crm_cust_info
)as t
where rank_by_create_date=1 and cst_id is not null ;



-- fix crm_prd_info

DROP TABLE IF EXISTS silver.crm_prd_info;

CREATE TABLE silver.crm_prd_info(
prd_id INT,
prd_key varchar(50),
prd_nm varchar(50),
prd_cost INT,
prd_line varchar(50),
prd_start_dt DATE,
prd_end_dt DATE,
dwh_create_date DATETIME DEFAULT 
CURRENT_TIMESTAMP
);


INSERT INTO silver.crm_prd_info(
            prd_id,
            cat_id,
            prd_key,
            prd_nm,
            prd_cost,
            prd_line,
            prd_start_dt,
            prd_end_dt
            )
SELECT
prd_id,
REPLACE(SUBSTRING(prd_key,1,5),'-','_') as Cat_id,
SUBSTRING(prd_key,7,LENGTH(prd_key)) as prd_key,
prd_nm,
prd_cost,
CASE
          WHEN UPPER(trim(PRD_LINE))='M' THEN 'MOUNTAIN'
          WHEN UPPER(trim(PRD_LINE))='R' THEN 'ROAD'
          WHEN UPPER(trim(PRD_LINE))='S' THEN 'OTHER SALES'
          WHEN UPPER(trim(PRD_LINE))='T' THEN 'TOURING'
          ELSE 'n/a'
	END AS prd_line,
    CAST(prd_start_dt AS DATE) AS prd_start_dt,
DATE_SUB(
LEAD(prd_start_dt)OVER(PARTITION BY prd_key ORDER BY prd_start_dt),INTERVAL 1 DAY) AS prd_end_dt
from bronze.crm_prd_info
;

--fix crm_sales_details--

-- we need to change data type of data as they are int type so before inserting the data we are going to change the data types in the table

DROP TABLE IF EXISTS silver.crm_sales_details;

CREATE TABLE silver.crm_sales_details(
sls_ord_name VARCHAR(50),
sls_prd_key VARCHAR(50),
sls_cust_id INT,
sls_order_dt DATE,
sls_ship_dt DATE,
sls_due_dt DATE,
sls_sales INT,
sls_quantity INT,
sls_price INT,
dwh_create_date DATETIME DEFAULT
CURRENT_TIMESTAMP
);

INSERT INTO silver.crm_sales_details(
  sls_ord_name,
  sls_prd_key,
  sls_cust_id,
  sls_order_dt,
  sls_ship_dt,
  sls_due_dt,
  sls_sales,
  sls_quantity,
  sls_price
  )


SELECT 
    sls_ord_name,
    sls_prd_key,
    sls_cust_id,
    CASE
        WHEN sls_order_dt IS NULL 
             OR sls_order_dt = '' 
             OR LENGTH(TRIM(sls_order_dt)) != 8 THEN NULL
        ELSE STR_TO_DATE(TRIM(CAST(sls_order_dt AS CHAR)), '%Y%m%d')
    END AS sls_order_dt,
	case
      WHEN sls_ship_dt IS NULL 
             OR sls_ship_dt = '' 
             OR LENGTH(TRIM(sls_ship_dt)) != 8 THEN NULL
        ELSE STR_TO_DATE(TRIM(CAST(sls_ship_dt AS CHAR)), '%Y%m%d')
    END AS sls_ship_dt,
    case
        WHEN sls_due_dt IS NULL 
             OR sls_due_dt = '' 
             OR LENGTH(TRIM(sls_due_dt)) != 8 THEN NULL
        ELSE STR_TO_DATE(TRIM(CAST(sls_due_dt AS CHAR)), '%Y%m%d')
    END AS sls_due_dt,
    CASE
    WHEN sls_sales IS NULL OR sls_sales <=0 OR sls_sales != sls_quantity * ABS(sls_price)
    THEN sls_quantity * abs(sls_price)
    ELSE sls_sales
    END AS sls_sales,
    CASE 
    WHEN sls_price IS NULL OR sls_price <=0 OR sls_price != sls_sales/sls_quantity
    THEN sls_sales/sls_quantity
    else sls_price
    end as sls_price,
    sls_quantity
FROM bronze.crm_sales_details;

-- insert into silver.erp_loc_a101--

INSERT INTO silver.erp_loc_a101(
cid,
cntry
)

SELECT 
REPLACE (cid,'-','')as cid,
CASE
  WHEN trim(cntry)='DE' THEN 'GERMANY'
  WHEN TRIM(CNTRY)IN ('US','USA') THEN 'UNITED STATES'
  WHEN trim(cntry)='' or cntry is null then 'n/a'
  ELSE trim(cntry)
  end as cntry
from bronze.erp_loc_a101;


-- erp_px_cat_g1v2 --

INSERT INTO silver.erp_px_cat_g1v2(
id,
cat,
subcat,
maintenance
)
SELECT 
id,
cat,
subcat,
maintenance
FROM bronze.erp_px_cat_g1v2;
